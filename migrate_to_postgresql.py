#!/usr/bin/env python3
"""
Script de migration des donn√©es de SQLite vers PostgreSQL

Usage: 
    source venv/bin/activate
    python migrate_to_postgresql.py
"""

import sqlite3
import pandas as pd
import os
from sqlalchemy import create_engine, text
from dotenv import load_dotenv

def migrate_sqlite_to_postgresql():
    """Migre les donn√©es de SQLite vers PostgreSQL"""
    
    # Charger les variables d'environnement
    load_dotenv()
    
    sqlite_file = "resultats_batiments.sqlite"
    postgresql_url = os.getenv('DATABASE_URL')
    
    if not postgresql_url:
        print("‚ùå Erreur : DATABASE_URL n'est pas d√©finie dans le fichier .env")
        return False
    
    # Correction pour les URLs PostgreSQL avec le dialecte 'postgres'
    if postgresql_url.startswith('postgres://'):
        postgresql_url = postgresql_url.replace('postgres://', 'postgresql://', 1)
    
    if not postgresql_url.startswith('postgresql'):
        print("‚ùå Erreur : DATABASE_URL doit pointer vers une base PostgreSQL")
        return False
    
    if not os.path.exists(sqlite_file):
        print(f"‚ùå Erreur : Le fichier SQLite {sqlite_file} n'existe pas")
        return False
    
    try:
        # Connexion SQLite
        print("üìÑ Lecture des donn√©es depuis SQLite...")
        sqlite_conn = sqlite3.connect(sqlite_file)
        df = pd.read_sql_query("SELECT * FROM validation", sqlite_conn)
        sqlite_conn.close()
        
        print(f"‚úÖ {len(df)} enregistrements trouv√©s dans SQLite")
        
        if len(df) == 0:
            print("‚ÑπÔ∏è  Aucune donn√©e √† migrer")
            return True
        
        # Connexion PostgreSQL
        print("üêò Connexion √† PostgreSQL...")
        pg_engine = create_engine(postgresql_url)
        
        # Cr√©er la table si n√©cessaire
        with pg_engine.connect() as conn:
            conn.execute(text('''
                CREATE TABLE IF NOT EXISTS validation (
                    cleabs TEXT PRIMARY KEY,
                    validation TEXT,
                    commentaire TEXT DEFAULT NULL
                )
            '''))
            conn.commit()
        
        # Migration des donn√©es
        print("üîÑ Migration des donn√©es...")
        df.to_sql('validation', pg_engine, if_exists='append', index=False)
        
        print("‚úÖ Migration termin√©e avec succ√®s !")
        print(f"üìä {len(df)} enregistrements migr√©s vers PostgreSQL")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la migration : {e}")
        return False

if __name__ == "__main__":
    print("üöÄ D√©marrage de la migration SQLite vers PostgreSQL")
    print("=" * 50)
    
    success = migrate_sqlite_to_postgresql()
    
    if success:
        print("=" * 50)
        print("‚úÖ Migration termin√©e !")
        print("Vous pouvez maintenant utiliser PostgreSQL avec votre application.")
    else:
        print("=" * 50)
        print("‚ùå La migration a √©chou√©.")
        print("V√©rifiez votre configuration et r√©essayez.")
